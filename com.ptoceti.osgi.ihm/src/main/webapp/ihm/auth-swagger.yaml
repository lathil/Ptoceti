openapi: 3.0.1
info:
  title: Ptoceti Auth Api
  version: 1.0.0
paths:
  /login:
    get:
      tags:
        - login
      operationId: principal
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
  /login/login:
    post:
      tags:
        - login
      operationId: login
      parameters:
        - name: Authorization
          in: header
          schema:
            type: string
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                credential:
                  type: string
      responses:
        default:
          description: default response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Credential'
  /login/logout:
    post:
      tags:
        - login
      operationId: logout
      responses:
        default:
          description: default response
          content:
            '*/*': { }
  /prefs/node/{nodePath}:
    get:
      tags:
        - prefs
      operationId: getPreferences
      parameters:
        - name: nodePath
          in: path
          required: true
          schema:
            type: string
            default: ""
      responses:
        default:
          description: default response
          content:
            application/xml:
              schema:
                $ref: '#/components/schemas/PreferencesWrapper'
            application/json:
              schema:
                $ref: '#/components/schemas/PreferencesWrapper'
    delete:
      tags:
        - prefs
      operationId: deletePreferences
      parameters:
        - name: nodePath
          in: path
          required: true
          schema:
            type: string
            default: ""
      responses:
        default:
          description: default response
          content:
            '*/*': { }
  /prefs/props/{nodePath}:
    get:
      tags:
        - prefs
      operationId: getPreferencesProperty
      parameters:
        - name: nodePath
          in: path
          required: true
          schema:
            type: string
            default: ""
        - name: name
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PreferencePropertyEntry'
    post:
      tags:
        - prefs
      operationId: addPreferencesProperty
      parameters:
        - name: nodePath
          in: path
          required: true
          schema:
            type: string
            default: ""
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/PreferencePropertyEntry'
      responses:
        default:
          description: default response
          content:
            '*/*': { }
    delete:
      tags:
        - prefs
      operationId: deletePreferencesProperty
      parameters:
        - name: nodePath
          in: path
          required: true
          schema:
            type: string
            default: ""
        - name: name
          in: query
          schema:
            type: string
      responses:
        default:
          description: default response
          content:
            '*/*': { }
components:
  schemas:
    Credential:
      type: object
      properties:
        token:
          type: string
    PreferencePropertyEntry:
      type: object
      properties:
        key:
          type: string
          xml:
            attribute: true
        value:
          type: string
          xml:
            attribute: true
    PreferencesWrapper:
      type: object
      properties:
        absolutePath:
          type: string
          xml:
            wrapped: true
        childrenNames:
          type: array
          xml:
            wrapped: true
          items:
            type: string
            xml:
              name: childrenNames
        name:
          type: string
          xml:
            wrapped: true
        parent:
          type: string
          xml:
            wrapped: true
        properties:
          type: array
          xml:
            wrapped: true
          items:
            $ref: '#/components/schemas/PreferencePropertyEntry'
